#!/usr/bin/env python3
import argparse

from oliver.subcommands import configure, status 

SUBCOMMANDS = {
    'status': status,
    'configure': configure
}

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="An opinionated Cromwell orchestration system.")
    
    # Common arguments
    parser.add_argument("--host", help="Cromwell host location.", default="http://localhost:8000")
    parser.add_argument("-v", "--verbose", help="Print verbose output.", default=False, action="store_true")

    # Subparsers
    subparsers = parser.add_subparsers(dest="subcommand")

    subcommand_mapping = {}
    for name, module in SUBCOMMANDS.items():
        if not hasattr(module, 'register_subparser') or not hasattr(module, 'call'):
            raise RuntimeError(f"Subcommand does not have required methods: {name}!")
        module.register_subparser(subparsers)
        subcommand_mapping[name] = module.call

    args = parser.parse_args()

    if args.subcommand not in subcommand_mapping:
        raise RuntimeError(f"Invalid subcommand: {args.subcommand}!")

    subcommand_mapping[args.subcommand](args)